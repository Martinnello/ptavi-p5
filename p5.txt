 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura?
	954 paquetes

 ** ¿Cuánto tiempo dura la captura?
	56.149 segundos

 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
	192.168.1.34
	Es una IP privada ya que es 192.168.x.x y es una dirección reservada a LAN.
	Porque se ha tenido que conectar con un router NAT y es la primera dirección que aparece en la captura y hace la solicitud a ekiga. Su dirección publica solo la sabe el router NAT.

3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
	UDP = 96,2 % y TCP = 2,1 %
	Si es consistente y normal que tengamos más porcentaje en paquetes UDP.
	Una conexión en tiempo real es mejor ya que necesitamos asegurar que los paquetes lleguen dentro de unos límites de 
	poco tiempo al destinatario.

 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
	Ethernet --> IPv4 --> UDP (STUN, SIP, RTP --> H.261, RTCP --> DNS), TCP (HTTP, ICMP) y ARP.

4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
	Seg 7  = REGISTER
	Seg 14 = INVITE
	Seg 16 = INVITE
	Seg 38 = BYE
	Seg 55 = Se da de baja.

 ** Y los paquetes con RTP, ¿cuándo se envían?
	Desde el segundo 16 al 38, es decir, desde que se acepta el segundo INVITE hasta el BYE.

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas?
	DNS. Para el reconocimiento del nombre de dominio asignado a cada uno de los participantes
	y poder localizarlos y direccionarlos, estableciendo conexión con Ekiga.

 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
	80.58.61.250

 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
	86.64.162.35

 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?
	addr.arpa usa la resolución inversa por DNS, determina un nombre de dominio asociado a una IP.
	Podemos ver que es la misma que ekiga.net pero al reves.

6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo?
	Full request URL: http://ekiga.net/ip/

 ** ¿Qué user agent (UA) la está pidiendo?
	Ekiga

 ** ¿Qué devuelve el servidor?
	Un HTTP con la siguiente dirección: 83.36.48.212, que es la dirección pública donde el servidor nos solicita usuario y password.

 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
	Nos esta devolviendo nuestra ip pública, que en este caso en los laboratorios de la universidad es: 193.147.77.69

7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
	Es un protocolo para determinar si se está haciendo uso de NAT o no.
	Permite saber su dirección IP pública, tipo de NAT en el que se encuentra y puerto de Internet asociado con el puerto local a través de NAT.

 ** ¿Estamos tras un NAT?
	Si, al ser una IP privada.

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar?
	86.64.162.35

 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
	5060

 ** ¿Qué método SIP utiliza el UA para registrarse?
	REGISTER

 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
	Allow: INVITE,ACK,OPTIONS,BYE,CANCEL,NOTIFY,REFER,MESSAGE

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
	No, error 401, pide autentificación.

 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
	Porque llega el mensaje 401 y no el 200.

 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
	El tamaño y el contenido. El primer envío sin autentificación (523 bytes) y el segundo (712 bytes) con la autentificación.

 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
	3600 segundos

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
	Si. Gregorio Robles con grex@ekiga.net desde 83.36.48.212

 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
	Toda la descripción del SIP en SDP (Información de propietario, informacion de conexión, tiempo, media, direccion y atributos).

 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
	No, ya que obtenemos como respuesta un 407 "Proxy Authentication Required".

 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
	Incluye "Proxy-Authorization" dandonos la autorización para poder conectarnos.

11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
 	RTP -> Para el envio de información en tiempo real (Envia audio)
 	Un nivel por debajo de la jerarquía de RTP -> H.261 (ITU video compression standard). Envio de este codec.

 ** ¿Cuál es el tamaño de paquete de los mismos?
 	RTP -> 214 bytes
 	H.261 -> Va variando (1028, 1073, 1037, 1077, 1018, 407... bytes)

 ** ¿Se utilizan bits de padding?
 	No, en los paquetes encontramos -> ..0. .... = Padding: False

 ** ¿Cuál es la periodicidad de los paquetes que se envían?
 	RTP -> Alrededor de 0.024 segundos
 	H.261 -> 0.25 segundos aprox.

 ** ¿Cuántos bits/segundo estamos enviando?
 	De media durante toda la transmisión tenemos 33.000 bits/segundo.

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?
 	Tenemos 2. Necesitamos uno para audio g711 en el puerto 5010 y video h261 en el puerto 5014.

 ** ¿Cuántos paquetes se pierden?
 	0 en los dos casos.

 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
 	1290.479 ms(h261) y 1290.444 ms (audio).
 	Es el tiempo maximo entre un paquete y el anterior en el envío de paquetes RTP.

 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?

 	h261 -> Max - 183.096 ms. Med - 153.24 ms.
 	g711 -> Max - 119.635 ms. Med - 42.5 ms.
 	Es la variación del retardo en los envios.
 	La conversación es de calidad no se considera mucho tiempo ya que no superamos 300 ms de media en ninguno de los dos casos
 	y hasta medio segundo se consideraría aceptable, aunque de calidad no muy optima.

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
 	0 en los dos casos ya que es el primero y no puede haber ni retraso ni diferencia de tiempo con otro paquete.

 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
 	Si, pulsando G, nos lleva al paquete 113 que es el primero de audio que envia.

 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
 	El 247. Es de 38.82ms.

 ** ¿A qué se debe el cambio tan brusco del jitter?
 	A un cambio también en el valor de delta, que ahora es de 554,74ms, esto implica un cambio en la velocidad de transimisión de los paquetes.

 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
 	Si, porque el cambio de jitter depende del cambio de delta. El incremento de delta es el que hace que jitter pase de 5.76 ms a 38.82 ms.

 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
 	La velocidad de conexión que tenemos en ambos lados de la conexión 
 	y el correcto y óptimo envio de datagramas en la red hacen que la delta 
 	aumente y por tanto el jitter al ser el tiempo de retardo entre entregas de
 	los paquetes, también aumenta.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación?
 	25 segundos. Del seg 14 de la captura al 39.

 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
 	Synchronization Source Identifier. En nuestra captura tenemos dos: audio vídeo:
    En los paquetes de G.711 -> 0xbf4afd37
    En los paquetes de H.261 -> 0x43306582
    No hay CSRCs. (Quiere decir que nuestros SSRCs no pasan por mezcladores y se envia cada uno por su lado).

15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?
 	BYE

 ** ¿En qué trama(s)?
 	924, 925, 927, y 933.

 ** ¿Por qué crees que se envía varias veces?
 	Nos llegan paquetes ICMP, port unreachable. El usuario intenta contactar con el servidor para finalizar la conexión.
 	Envia 4 BYEs hasta que alcanza su destino y le devuelve un SIP 200 OK (Trama 938 a 941).

16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
 	El usuario grex@ekiga.net decide darse de baja.

 ** ¿En qué trama sucede esto?
 	950.

 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
 	El valor de Expires en este caso es 0.

================================================================================
================================================================================

Captura de una sesión SIP

17 y 18.
Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

	--------------------------------------------------------------------------------------------------------------------------------------
	------------------ 				Nos daba un error ese sip y establecimos una conexión con ekiga: 					------------------
	------------------		Yo en un ordenador de los laboratorios e Ignacio Rueda (compañero de clase) en su portatil.	------------------
	--------------------------------------------------------------------------------------------------------------------------------------

19. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
 	Si porque nuestro portatil usa NAT e IP privada pero para el caso del ordenador del laboratorio no.
 	Si que usa DNS al conectarse con el Registrar al comunicarse con el servidor de ekiga.

 ** ¿Son diferentes el registro y la descripción de la sesión?
 	El registro utiliza solo SIP y en el INVITE, al intentar establecer la conexión encontramos el SDP.

20. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
 	Los flujos que tenemos son 4, un par por cada canal de la conversación:
 		-Audio y video de Igor.
 		-Audio y video de Martin.

 ** ¿Cuál es su periodicidad?
 	Alrededor de 0,03 segundos.

 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
 	Max delta -> 45,6 ms
 	Max jitter ->	9,2 ms
 	Jitter Med ->	8,5 ms

 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria
 	Desde Telephony -> VoIP, pulsando Play streams.

 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net? 
 	No funciona.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

21. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
